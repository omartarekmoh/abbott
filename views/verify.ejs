<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Verify Consent</title>
  <link rel="stylesheet" href="<%= baseUrl %>/css/styles.css">
  <style>
    .notification {
      position: fixed;
      top: 20px;
      left: 50%;
      transform: translateX(-50%);
      color: white;
      padding: 15px 20px;
      border-radius: 5px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      font-size: 16px;
      z-index: 1000;
      display: none;
    }
    .notification.show {
      display: block;
    }
    .notification.success {
      background-color: #4caf50;
    }
    .notification.error {
      background-color: #f44336;
    }
    .checkbox-container {
  margin: 20px 0;
  padding: 0;
  background-color: #f8f9fa;
  border-radius: 8px;
  transition: background-color 0.2s;
}

.checkbox-container:hover {
  background-color: #f0f1f2;
}

.full-width-label {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 12px 16px; /* Ensures proper spacing */
  width: 100%; /* Ensures it spans the full container width */
  cursor: pointer;
}

.full-width-label input[type="checkbox"] {
  appearance: none;
  -webkit-appearance: none;
  width: 20px;
  height: 20px;
  border: 2px solid #007bff;
  border-radius: 4px;
  margin: 0;
  display: grid;
  place-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
}

.full-width-label input[type="checkbox"]:checked {
  background-color: #007bff;
  border-color: #007bff;
}

.full-width-label input[type="checkbox"]::before {
  content: "";
  width: 12px;
  height: 12px;
  transform: scale(0);
  transition: transform 0.2s ease;
  box-shadow: inset 1em 1em white;
  transform-origin: center;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

.full-width-label input[type="checkbox"]:checked::before {
  transform: scale(1);
}

.full-width-label span {
  font-size: 16px;
  color: #333;
  font-weight: 500;
  user-select: none;
}
    .checkbox-container input[type="checkbox"] {
      appearance: none;
      -webkit-appearance: none;
      width: 20px;
      height: 20px;
      border: 2px solid #007bff;
      border-radius: 4px;
      margin: 0;
      display: grid;
      place-content: center;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .checkbox-container input[type="checkbox"]:checked {
      background-color: #007bff;
      border-color: #007bff;
    }

    .checkbox-container input[type="checkbox"]::before {
      content: "";
      width: 12px;
      height: 12px;
      transform: scale(0);
      transition: transform 0.2s ease;
      box-shadow: inset 1em 1em white;
      transform-origin: center;
      clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
    }

    .checkbox-container input[type="checkbox"]:checked::before {
      transform: scale(1);
    }

    .checkbox-container label {
      font-size: 16px;
      color: #333;
      font-weight: 500;
      cursor: pointer;
      user-select: none;
    }
  </style>
</head>
<body>
  <div id="notification" class="notification"></div>
  <div class="container">
    <div class="logo-container">
      <img src="<%= baseUrl %>/images/abbott-logo.png" alt="Abbott Logo" class="logo">
      <img src="<%= baseUrl %>/images/freestyle-logo.png" alt="Freestyle Libre Logo" class="logo">
    </div>
    <h1>Consent Form</h1>
    <p>Please select and accept to continue.</p>
    <form id="consentForm" method="POST">
      <div class="toggle-container">
        <span class="toggle-label">Mandatory *</span>
        <div class="toggle-switch" id="mandatoryToggle"></div>
        <input type="hidden" id="consent" name="consent" value="0">
      </div>
      <div class="toggle-container">
        <span class="toggle-label">Optional / Marketing</span>
        <div class="toggle-switch" id="marketingToggle"></div>
        <input type="hidden" id="marketing" name="marketing" value="0">
      </div>
      <div class="checkbox-container">
        <label for="proceedToLogin" class="full-width-label">
          <input type="checkbox" id="proceedToLogin" name="proceedToLogin">
          <span>Proceed to login page</span>
        </label>
      </div>
      <button type="submit">Accept</button>
    </form>
    <p class="footer-text">By clicking Accept, you are agreeing to the <a href="https://docs.google.com/document/d/1-_5br9sbX5hH4uVYJ8xw4FCC02w2AhyqnwlfszTO12k/edit" target="_blank" rel="noopener noreferrer">terms and conditions</a>.</p>
  </div>
  <script>
    const baseUrl = "<%= baseUrl %>";

    function displayNotification(message, type) {
      const notification = document.getElementById("notification");
      notification.textContent = message;
      notification.className = `notification show ${type}`;

      setTimeout(() => {
        notification.classList.remove("show");
      }, 4000);
    }

    const form = document.getElementById("consentForm");
    const mandatoryToggle = document.getElementById("mandatoryToggle");
    const marketingToggle = document.getElementById("marketingToggle");
    const consentInput = document.getElementById("consent");
    const marketingInput = document.getElementById("marketing");
    const proceedToLoginCheckbox = document.getElementById("proceedToLogin");

    mandatoryToggle.addEventListener("click", () => {
      mandatoryToggle.classList.toggle("active");
      consentInput.value = mandatoryToggle.classList.contains("active") ? "1" : "0";
    });

    marketingToggle.addEventListener("click", () => {
      marketingToggle.classList.toggle("active");
      marketingInput.value = marketingToggle.classList.contains("active") ? "1" : "0";
    });

    form.addEventListener("submit", async (e) => {
  e.preventDefault();
  const token = window.location.pathname.split("/").pop();
  const formData = {
    consent: consentInput.value,
    marketing: marketingInput.value,
    proceedToLogin: proceedToLoginCheckbox.checked
  };

  try {
    const response = await fetch(`${baseUrl}/api/verify/${token}`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(formData),
    });
    const data = await response.json();
    
    if (response.ok) {
      if (proceedToLoginCheckbox.checked) {
        // Redirect to login page
        const redirectUrl = new URL(`${baseUrl}/login`);
        redirectUrl.searchParams.append('message', data.message);
        redirectUrl.searchParams.append('type', 'success');
        if (data.phoneNumber) {
          localStorage.setItem('userPhoneNumber', data.phoneNumber);
          redirectUrl.searchParams.append('phoneNumber', data.phoneNumber);
        }
        window.location.href = redirectUrl.toString();
      } else {
        // Redirect to dashboard with credentials check and phone number
        const dashboardUrl = new URL(`${baseUrl}/dashboard`);
        dashboardUrl.searchParams.append('message', data.message);
        dashboardUrl.searchParams.append('type', 'success');
        if (data.phoneNumber) {
          dashboardUrl.searchParams.append('phoneNumber', data.phoneNumber);
          // Also store in localStorage for later use
          localStorage.setItem('userPhoneNumber', data.phoneNumber);
        }
        if (data.token) {
          localStorage.setItem('token', data.token);
        }
        window.location.href = dashboardUrl.toString();
      }
    } else {
      displayNotification(data.message || "An error occurred. Please try again.", "error");
    }
  } catch (error) {
    displayNotification("An unexpected error occurred. Please try again.", "error");
  }
});
  </script>
</body>
</html>